Cross Compilation Environment
=============================

To prepare the cross compilation environment, look at setup_crossenv.sh. If
you change the install prefix from /usr/local/cross, you also need to change
the variable PREFIX in src/Makefile.config and src/config.sh.  You will need
to download the appropriate source packages from your friendly neighbourhood
mirror and adjust the first few lines of setup_crossenv.sh.

IMPORTANT: To build the cross compiler, you must have the *development*
versions (i.e., libraries *and* headers) of the following packages installed
that are appropriate for your host compiler:
- GNU Multiple Precision Arithmetic Library - gmp
- GNU MPC - mpc or libmpc
- GNU MPFR - mpfr
- CLooG Code Generator - cloog, and dependencies:
  . Integer Set Library - isl, or
  . Parma Polyhedra Library - ppl

The output of the cross compilation script should contain the following
(among other output; grep for SUCCESS):

SUCCESS: crossgcc build
SUCCESS: newlib rebuild
SUCCESS: libstdc++ rebuild
SUCCESS: crossgcc rebuild
SUCCESS: gdb build
SUCCESS: grub2 build
SUCCESS: gcc install
SUCCESS: gdb install
SUCCESS: grub2 install


Hardware Emulation
==================

The script setup_crossenv.sh also contains suggested configurations for
bochs and qemu and will build and install those in /usr/local when invoked
with the corresponding command-line argument.


Other Tools
===========

You need to have a recent version of xorriso installed for grub2 iso image
making.  I am currently using version 1.2.4.

You need to have a recent version of nasm installed to assemble the initial
boot code.  I am currently using version 2.10.05


Building KOS
============

To prepare the KOS source code (starting from the main directory):

cd src/extern
# download acpica-unix-20120816.tar.gz from https://www.acpica.org/downloads
tar xzvf acpica-unix-20120816.tar.gz
cd acpica-unix-20120816
patch -p1 < ../../../patches/acpica.patch
cd ..
mv acpica-unix-20120816 acpica
cd ../..

You should be back in the main directory. Type 'make' to get a list of build
targets. These targets should also work from within the src/ directry.

Running KOS
===========

When executing KOS, the system should show a number of messages and then get
into a split-screen mode, where the first 20 lines are showing output from 7
threads running on 2 cores and the bottom 5 lines show keycodes when keys
are pressed and released.  Running KOS in qemu creates several log files
that can be used to diagnose problems:

/tmp/KOS.serial
/tmp/KOS.dbg
/tmp/qemu.log

KOS.dbg and KOS.serial are two different output channels internally, but
currently contain excatly the same information.


Please send feedback to mkarsten@uwaterloo.ca.
