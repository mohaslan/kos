diff -ruN orig-gdb-7.5/bfd/config.bfd gdb-7.5/bfd/config.bfd
--- orig-gdb-7.5/bfd/config.bfd	2012-05-15 08:55:34.000000000 -0400
+++ gdb-7.5/bfd/config.bfd	2012-08-21 13:26:11.052123119 -0400
@@ -607,6 +607,11 @@
     targ_selvecs="bfd_elf32_i386_vec bfd_elf64_l1om_vec bfd_elf64_k1om_vec i386coff_vec"
     want64=true
     ;;
+  x86_64-*-kos*)
+    targ_defvec=bfd_elf64_x86_64_vec
+    targ_selvecs="bfd_elf32_i386_vec bfd_elf64_l1om_vec bfd_elf64_k1om_vec i386coff_vec"
+    want64=true
+    ;;
   x86_64-*-dragonfly*)
     targ_defvec=bfd_elf64_x86_64_vec
     targ_selvecs="bfd_elf32_i386_vec bfd_elf64_l1om_vec bfd_elf64_k1om_vec"
diff -ruN orig-gdb-7.5/config.sub gdb-7.5/config.sub
--- orig-gdb-7.5/config.sub	2012-04-25 11:53:25.000000000 -0400
+++ gdb-7.5/config.sub	2012-08-21 13:22:17.114490047 -0400
@@ -1348,7 +1348,7 @@
 	      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -auroraux* | -solaris* \
 	      | -sym* | -kopensolaris* \
 	      | -amigaos* | -amigados* | -msdos* | -newsos* | -unicos* | -aof* \
-	      | -aos* | -aros* \
+	      | -aos* | -aros* | -kos* \
 	      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \
 	      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \
 	      | -hiux* | -386bsd* | -knetbsd* | -mirbsd* | -netbsd* \
diff -ruN orig-gdb-7.5/gdb/configure.tgt gdb-7.5/gdb/configure.tgt
--- orig-gdb-7.5/gdb/configure.tgt	2012-08-01 15:48:44.000000000 -0400
+++ gdb-7.5/gdb/configure.tgt	2012-08-21 13:34:21.857156612 -0400
@@ -602,6 +602,13 @@
 			solib-svr4.o symfile-mem.o linux-tdep.o linux-record.o"
 	build_gdbserver=yes
 	;;
+x86_64-*-kos*)
+	# Target: GNU/Linux x86-64
+	gdb_target_obs="amd64-tdep.o amd64-linux-tdep.o i386-tdep.o \
+			i387-tdep.o i386-linux-tdep.o glibc-tdep.o \
+			solib-svr4.o symfile-mem.o linux-tdep.o linux-record.o"
+	build_gdbserver=yes
+	;;
 x86_64-*-freebsd* | x86_64-*-kfreebsd*-gnu)
 	# Target: FreeBSD/amd64
 	gdb_target_obs="amd64-tdep.o amd64fbsd-tdep.o i386-tdep.o \
@@ -644,7 +651,7 @@
 case "${targ}" in
 *-*-freebsd* | *-*-kfreebsd*-gnu)
 		gdb_osabi=GDB_OSABI_FREEBSD_ELF ;;
-*-*-linux* | *-*-uclinux*)
+*-*-linux* | *-*-uclinux* | *-*-kos*)
 		gdb_osabi=GDB_OSABI_LINUX ;;
 *-*-nto*)	gdb_osabi=GDB_OSABI_QNXNTO ;;
 m68*-*-openbsd* | m88*-*-openbsd* | vax-*-openbsd*) ;;
diff -ruN orig-gdb-7.5/gdb/remote.c gdb-7.5/gdb/remote.c
--- orig-gdb-7.5/gdb/remote.c	2012-07-02 11:29:34.000000000 -0400
+++ gdb-7.5/gdb/remote.c	2012-08-21 13:21:43.778160640 -0400
@@ -5955,11 +5955,18 @@
   char *regs;
 
   buf_len = strlen (rs->buf);
-
+  
   /* Further sanity checks, with knowledge of the architecture.  */
-  if (buf_len > 2 * rsa->sizeof_g_packet)
-    error (_("Remote 'g' packet reply is too long: %s"), rs->buf);
-
+  if (buf_len > 2 * rsa->sizeof_g_packet) {
+    rsa->sizeof_g_packet = buf_len;
+    for (i = 0; i < gdbarch_num_regs (gdbarch); i++) {
+    if (rsa->regs[i].pnum == -1) continue;
+      if (rsa->regs[i].offset >= rsa->sizeof_g_packet)
+        rsa->regs[i].in_g_packet = 0;
+      else
+        rsa->regs[i].in_g_packet = 1;
+    }
+  }
   /* Save the size of the packet sent to us by the target.  It is used
      as a heuristic when determining the max size of packets that the
      target can safely receive.  */
